# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: run tests, release, upload to Docker-hub and deploy on Render

on:
  pull_request: 
    branches: [ main ]
  push:
    branches: [ main, github-actions-CI/CD ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: flask_base_root_pass
          MYSQL_DATABASE: flask_base_db
          MYSQL_USER: flask_base_user
          MYSQL_PASSWORD: flask_base_pass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        export MYSQL_HOSTNAME=127.0.0.1
        export MYSQL_PORT=3306
        export MYSQL_DATABASE=flask_base_db
        export MYSQL_USER=flask_base_user
        export MYSQL_PASSWORD=flask_base_pass
        pytest app/tests/*.py

  release:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release@17
          npm install --save-dev @semantic-release/changelog
          npm install --save-dev @semantic-release/exec
          npm install --save-dev @semantic-release/git
          pip install wheel
          pip install twine

      - name: Semantic Release
        run: |
          npx semantic-release

  upload-to-docker-hub:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get Semantic Release version
        id: get_version
        run: echo "::set-output name=VERSION::$(npx semantic-release version)"

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build -t your-docker-hub-username/your-image-name:${{ steps.get_version.outputs.VERSION }} -f Dockerfile .
          docker push your-docker-hub-username/your-image-name:${{ steps.get_version.outputs.VERSION }}